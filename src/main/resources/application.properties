
server.port=9093
ssl.

# postgres db setting
spring.datasource.url=jdbc:postgresql://localhost:5431/intelligence_sensor_platform?currentSchema=filter_manager
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

logging.level.org.springframework=debug
logging.level.org.springframework.web=debug

# hibernate setting
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.generate-ddl=true

# service zone url
url.servicezone.http=http://localhost:9000

# other components url
url.servicemanager.http=http://localhost:9090
url.optimizationmanager.http=http://localhost:9091
url.mlmanager.http=http://localhost:9092
url.filtermanager.http=http://localhost:9093

# service zone properties
servicezone.api.auth.username=sejung2
servicezone.api.auth.password=qwerty123456

# Kafka
#spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.acks=all
spring.kafka.producer.send-to-leader=true
kafka.consumer.topic.parameter=parameter-topic
kafka.consumer.group.parameter=optimization-manager

# Redis
spring.data.redis.host=localhost
spring.data.redis.port=6379